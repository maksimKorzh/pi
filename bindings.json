{
  "ctrl-q": {
    "bind": "ch == ((ord('q')) & 0x1f)",
    "exec": ["sys.exit()"]
  },
  "ctrl-s": {
    "bind": "ch == ((ord('s')) & 0x1f)",
    "exec": [
      "try:",
      "  cont=''",
      "  for l in b[:-1]: cont += ''.join([chr(c) for c in l]) + '\\n'",
      "  with open(src, 'w') as f: f.write(cont); d=0",
      "except Exception as e: s.move(R, 0); s.addstr(str(e)); s.refresh(); time.sleep(3)"
    ]
  },
  "home": {
    "bind": "ch == curses.KEY_HOME",
    "exec": ["c=0"]
  },
  "end": {
    "bind": "ch == curses.KEY_END == ch",
    "exec": ["c=len(b[r])"]
  },
  "ctrl-home": {
    "bind": "ch == 530",
    "exec": ["r=len(b)-2"]
  },
  "ctrl-end": {
    "bind": "ch == 535",
    "exec": ["r=0"]
  },
  "page-down": {
    "bind": "ch == curses.KEY_NPAGE",
    "exec": ["if r+R <= len(b)-2: r+=R\nelse: r=len(b)-2"]
  },
  "page-up": {
    "bind": "ch == curses.KEY_PPAGE",
    "exec": ["if r-R >=0: r-=R\nelse: r=0"]
  },
  "ctrl-f": {
    "bind": "ch == ((ord('f')) & 0x1f)",
    "exec": [
      "res = []; idx = 0",
      "for row in range(len(b)-1):",
      "  buffrow = b[row]",
      "  for col in range(len(buffrow)):",
      "    if ''.join([chr(c) for c in buffrow[col:col+len(req)]]) == req:",
      "      res.append([row, col])",
      "if len(res):",
      "  r, c = res[idx]; idx += 1"
    ]
  },
  "ctrl-g": {
    "bind": "ch == ((ord('g')) & 0x1f)",
    "exec": [
      "if len(res):",
      "  if idx == len(res): idx = 0",
      "try: r, c = res[idx]",
      "except: pass",
      "idx += 1"
    ]
  },
  "ctrl-x": {
    "bind": "ch == ((ord('x')) & 0x1f)",
    "exec": [
        "if len(b) > 2:",
        "  try: line = b[r]; del b[r]; c = 0",
        "  except: pass",
        "  if r >= len(b)-2: r = len(b)-2"
    ]
  },
  "ctrl-c": {
    "bind": "ch == ((ord('c')) & 0x1f)",
    "exec": ["line = b[r]"]
  },
  "ctrl-v": {
    "bind": "ch == ((ord('v')) & 0x1f)",
    "exec": ["b.insert(r, line)"]
  },
  "tab": {
    "bind": "ch == ((9) & 0x1f)",
    "exec": ["for i in range(4): b[r].insert(c, ord(' ')); c+=1"]
  },
  "delete": {
    "bind": "ch == 330",
    "exec": [
      "try: if len(b[r]): del b[r][c]",
      "except: pass"
    ]
  }
}


